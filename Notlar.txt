-Abstarct kýsma soyut þeyler interface ler ve base class lar yazýlýr somutlar ise concrete de abstarctler içine refereans tutucular koyulur.Biz böylece uygulamalr arasýndaki baðýmlýklarý minimize ediyoruz

-Concrete klasöründeki class lar veritabanýndaki tablolara karþýlýk gelir.Veritabaný tablolarý Entities altýnda concerete de tutulur yani.Concrete klasörüne konulan her class için dataaccess de  abstract klasörü altýna interface eklenir

-Core katmanýnýn .net core'un ismi ile bir alakasý yokdur altyapý iþlerinin yürütüldüðü katmandýr içerisinde diðer katmanlarýn isimlerini klasör olarak tutar.Örneðin dataaccess katmanýný ilgilendiren evrensel kodlar bu klasör altýnda tutulur

-Core katmaný diðer katmanlarý referans almaz

-Utilities araçlar demek Core katmanýnda oluþturulur ve response mesajlarýný oluþturacaðýmýz için Results klasörü oluþturacaðýz bu result klasörü Utilities klasörü altýnda bulunmalý

-Bir metotda default deðer vermek ileride sorunlara yol açabilir, gelecekteki senaryolarda farklý durumlar oluþtuðunda hala default assign edilebilir

-Constants klasöründe sabitler tutulur

-Core katmaný þirketteki tüm projelerde kullanabileceðin katmandýr.

-Restful yapýlar HTTP ile çalýþýr ihtiyaca göre TCP vs de vardýr

-Data Anototions Solid S harfine tersdir enttiyler içinde sadece entity olmalý ve DataAnotations sürdürülebilir bir çözüm deðildir

-Bir metot üzerine Log attribute u yazýlýrsa o metot çalýþmadan önce loglama kodlarý çalýþacak